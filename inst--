// BLTZ

	addiu 	$8,	$0,	0xffff
	bltz	$8,	label
	nop
	addu 	$10,   $8,	$8
label:
	addu 	$10,  $10,  $10


24 08 12 34
05 00 00 02
00 00 00 00
01 08 50 21
01 4a 50 21


// BGEZ

	addiu 	$8,	$0,	0x1234
	bgez	$8,	label
	nop
	addu 	$10,   $8,	$8
label:
	addu 	$10,  $10,  $10

24 08 12 34
05 01 00 02
00 00 00 00
01 08 50 21
01 4a 50 21

// LH

lui   $8, 0x1234
addiu $8, $0, 0x5678
sw    $8, 0x0($0)		; 把0寄存器空出来，但仿真时其实随意,向内存写的数据所以不会写寄存器
lh    $10, 0x0($0)
lh    $11, 0x2($0)




3c 08 12 34
25 08 56 78 	// 这一条有问题，应是25才是addiu
ac 08 00 00
84 0a 00 00
84 0b 00 02



// SLTI —— 注意寄存器前的符号是$，不是&

lui  		$10, 0x1234
addiu       $10, 0x5678
addiu		$8, $0, 0x1234
slti 		$10, $8, 0x0123
slti 		$10, $8, 0x2345

3c 0a 12 34
25 4a 56 78
24 08 12 34
29 0a 01 23
29 0a 23 45


// SLTIU —— 注意有符号数比较，是8+开头，不是1-7之间的数
lui  		$10, 0x1234
addiu       $10, 0x5678
addiu		$8, $0, 0x1234
slti 		$10, $8, 0x8234
sltiu 		$10, $8, 0x8234


3c 0a 12 34
25 4a 56 78
24 08 12 34
29 0a 82 34
2d 0a 82 34


// NOR

addiu		$8, 0x6
addiu		$9, 0x2
lui			$10, 0x1234
nor 		$10, $8, $9


25 08 00 06
25 29 00 02
3c 0a 12 34
01 09 50 27


// SRA

lui		$9, 0x8234
addiu 	$9, 0x1111
sra 	$10, $9, 0x5


3c 09 82 34
25 29 11 11
00 09 51 43
00 00 00 00

// XOR

addiu		$8, 0x6
addiu		$9, 0x2
xor $10,$8,$9

25 08 00 06
25 29 00 02
01 09 50 26
00 00 00 00


// SRAV

lui $9,0x8234
addiu $9,0x1111
addiu $8,0x3
srav $10,$9,$8

3c 09 82 34
25 29 11 11
25 08 00 03
01 09 50 07